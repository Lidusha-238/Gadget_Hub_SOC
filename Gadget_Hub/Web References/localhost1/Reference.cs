//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Gadget_Hub.localhost1 {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DistributerServiceSoap", Namespace="http://tempuri.org/")]
    public partial class DistributerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuotationRequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSentQuotationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendQuotationResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistributorProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDistributorProfileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DistributerService() {
            this.Url = global::Gadget_Hub.Properties.Settings.Default.Gadget_Hub_localhost1_DistributerService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetInventoryCompletedEventHandler GetInventoryCompleted;
        
        /// <remarks/>
        public event AddProductCompletedEventHandler AddProductCompleted;
        
        /// <remarks/>
        public event UpdateProductCompletedEventHandler UpdateProductCompleted;
        
        /// <remarks/>
        public event DeleteProductCompletedEventHandler DeleteProductCompleted;
        
        /// <remarks/>
        public event GetQuotationRequestsCompletedEventHandler GetQuotationRequestsCompleted;
        
        /// <remarks/>
        public event GetSentQuotationsCompletedEventHandler GetSentQuotationsCompleted;
        
        /// <remarks/>
        public event SendQuotationResponseCompletedEventHandler SendQuotationResponseCompleted;
        
        /// <remarks/>
        public event SendOrderCompletedEventHandler SendOrderCompleted;
        
        /// <remarks/>
        public event GetDistributorProfileCompletedEventHandler GetDistributorProfileCompleted;
        
        /// <remarks/>
        public event UpdateDistributorProfileCompletedEventHandler UpdateDistributorProfileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInventory(int distributorId) {
            object[] results = this.Invoke("GetInventory", new object[] {
                        distributorId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryAsync(int distributorId) {
            this.GetInventoryAsync(distributorId, null);
        }
        
        /// <remarks/>
        public void GetInventoryAsync(int distributorId, object userState) {
            if ((this.GetInventoryOperationCompleted == null)) {
                this.GetInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryOperationCompleted);
            }
            this.InvokeAsync("GetInventory", new object[] {
                        distributorId}, this.GetInventoryOperationCompleted, userState);
        }
        
        private void OnGetInventoryOperationCompleted(object arg) {
            if ((this.GetInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryCompleted(this, new GetInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddProduct(int distributorId, int productId, string productName, int quantity, decimal price, string deliveryDate) {
            object[] results = this.Invoke("AddProduct", new object[] {
                        distributorId,
                        productId,
                        productName,
                        quantity,
                        price,
                        deliveryDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddProductAsync(int distributorId, int productId, string productName, int quantity, decimal price, string deliveryDate) {
            this.AddProductAsync(distributorId, productId, productName, quantity, price, deliveryDate, null);
        }
        
        /// <remarks/>
        public void AddProductAsync(int distributorId, int productId, string productName, int quantity, decimal price, string deliveryDate, object userState) {
            if ((this.AddProductOperationCompleted == null)) {
                this.AddProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProductOperationCompleted);
            }
            this.InvokeAsync("AddProduct", new object[] {
                        distributorId,
                        productId,
                        productName,
                        quantity,
                        price,
                        deliveryDate}, this.AddProductOperationCompleted, userState);
        }
        
        private void OnAddProductOperationCompleted(object arg) {
            if ((this.AddProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProductCompleted(this, new AddProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateProduct(int distributorId, int productId, string productName, int quantity, decimal price, string deliveryDate) {
            object[] results = this.Invoke("UpdateProduct", new object[] {
                        distributorId,
                        productId,
                        productName,
                        quantity,
                        price,
                        deliveryDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProductAsync(int distributorId, int productId, string productName, int quantity, decimal price, string deliveryDate) {
            this.UpdateProductAsync(distributorId, productId, productName, quantity, price, deliveryDate, null);
        }
        
        /// <remarks/>
        public void UpdateProductAsync(int distributorId, int productId, string productName, int quantity, decimal price, string deliveryDate, object userState) {
            if ((this.UpdateProductOperationCompleted == null)) {
                this.UpdateProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProductOperationCompleted);
            }
            this.InvokeAsync("UpdateProduct", new object[] {
                        distributorId,
                        productId,
                        productName,
                        quantity,
                        price,
                        deliveryDate}, this.UpdateProductOperationCompleted, userState);
        }
        
        private void OnUpdateProductOperationCompleted(object arg) {
            if ((this.UpdateProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProductCompleted(this, new UpdateProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteProduct(int distributorId, int productId) {
            object[] results = this.Invoke("DeleteProduct", new object[] {
                        distributorId,
                        productId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProductAsync(int distributorId, int productId) {
            this.DeleteProductAsync(distributorId, productId, null);
        }
        
        /// <remarks/>
        public void DeleteProductAsync(int distributorId, int productId, object userState) {
            if ((this.DeleteProductOperationCompleted == null)) {
                this.DeleteProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProductOperationCompleted);
            }
            this.InvokeAsync("DeleteProduct", new object[] {
                        distributorId,
                        productId}, this.DeleteProductOperationCompleted, userState);
        }
        
        private void OnDeleteProductOperationCompleted(object arg) {
            if ((this.DeleteProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProductCompleted(this, new DeleteProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQuotationRequests", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetQuotationRequests() {
            object[] results = this.Invoke("GetQuotationRequests", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuotationRequestsAsync() {
            this.GetQuotationRequestsAsync(null);
        }
        
        /// <remarks/>
        public void GetQuotationRequestsAsync(object userState) {
            if ((this.GetQuotationRequestsOperationCompleted == null)) {
                this.GetQuotationRequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuotationRequestsOperationCompleted);
            }
            this.InvokeAsync("GetQuotationRequests", new object[0], this.GetQuotationRequestsOperationCompleted, userState);
        }
        
        private void OnGetQuotationRequestsOperationCompleted(object arg) {
            if ((this.GetQuotationRequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuotationRequestsCompleted(this, new GetQuotationRequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSentQuotations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSentQuotations(int distributorId) {
            object[] results = this.Invoke("GetSentQuotations", new object[] {
                        distributorId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSentQuotationsAsync(int distributorId) {
            this.GetSentQuotationsAsync(distributorId, null);
        }
        
        /// <remarks/>
        public void GetSentQuotationsAsync(int distributorId, object userState) {
            if ((this.GetSentQuotationsOperationCompleted == null)) {
                this.GetSentQuotationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSentQuotationsOperationCompleted);
            }
            this.InvokeAsync("GetSentQuotations", new object[] {
                        distributorId}, this.GetSentQuotationsOperationCompleted, userState);
        }
        
        private void OnGetSentQuotationsOperationCompleted(object arg) {
            if ((this.GetSentQuotationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSentQuotationsCompleted(this, new GetSentQuotationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendQuotationResponse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendQuotationResponse(int requestId, int distributorId, int productId, string productName, int quantity, decimal price, string deliveryDate) {
            object[] results = this.Invoke("SendQuotationResponse", new object[] {
                        requestId,
                        distributorId,
                        productId,
                        productName,
                        quantity,
                        price,
                        deliveryDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendQuotationResponseAsync(int requestId, int distributorId, int productId, string productName, int quantity, decimal price, string deliveryDate) {
            this.SendQuotationResponseAsync(requestId, distributorId, productId, productName, quantity, price, deliveryDate, null);
        }
        
        /// <remarks/>
        public void SendQuotationResponseAsync(int requestId, int distributorId, int productId, string productName, int quantity, decimal price, string deliveryDate, object userState) {
            if ((this.SendQuotationResponseOperationCompleted == null)) {
                this.SendQuotationResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendQuotationResponseOperationCompleted);
            }
            this.InvokeAsync("SendQuotationResponse", new object[] {
                        requestId,
                        distributorId,
                        productId,
                        productName,
                        quantity,
                        price,
                        deliveryDate}, this.SendQuotationResponseOperationCompleted, userState);
        }
        
        private void OnSendQuotationResponseOperationCompleted(object arg) {
            if ((this.SendQuotationResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendQuotationResponseCompleted(this, new SendQuotationResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendOrder(int quotationId, string orderId) {
            object[] results = this.Invoke("SendOrder", new object[] {
                        quotationId,
                        orderId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendOrderAsync(int quotationId, string orderId) {
            this.SendOrderAsync(quotationId, orderId, null);
        }
        
        /// <remarks/>
        public void SendOrderAsync(int quotationId, string orderId, object userState) {
            if ((this.SendOrderOperationCompleted == null)) {
                this.SendOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOrderOperationCompleted);
            }
            this.InvokeAsync("SendOrder", new object[] {
                        quotationId,
                        orderId}, this.SendOrderOperationCompleted, userState);
        }
        
        private void OnSendOrderOperationCompleted(object arg) {
            if ((this.SendOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOrderCompleted(this, new SendOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistributorProfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDistributorProfile(int distributorId) {
            object[] results = this.Invoke("GetDistributorProfile", new object[] {
                        distributorId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDistributorProfileAsync(int distributorId) {
            this.GetDistributorProfileAsync(distributorId, null);
        }
        
        /// <remarks/>
        public void GetDistributorProfileAsync(int distributorId, object userState) {
            if ((this.GetDistributorProfileOperationCompleted == null)) {
                this.GetDistributorProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistributorProfileOperationCompleted);
            }
            this.InvokeAsync("GetDistributorProfile", new object[] {
                        distributorId}, this.GetDistributorProfileOperationCompleted, userState);
        }
        
        private void OnGetDistributorProfileOperationCompleted(object arg) {
            if ((this.GetDistributorProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistributorProfileCompleted(this, new GetDistributorProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDistributorProfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateDistributorProfile(int distributorId, string name, string email, string password) {
            object[] results = this.Invoke("UpdateDistributorProfile", new object[] {
                        distributorId,
                        name,
                        email,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDistributorProfileAsync(int distributorId, string name, string email, string password) {
            this.UpdateDistributorProfileAsync(distributorId, name, email, password, null);
        }
        
        /// <remarks/>
        public void UpdateDistributorProfileAsync(int distributorId, string name, string email, string password, object userState) {
            if ((this.UpdateDistributorProfileOperationCompleted == null)) {
                this.UpdateDistributorProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDistributorProfileOperationCompleted);
            }
            this.InvokeAsync("UpdateDistributorProfile", new object[] {
                        distributorId,
                        name,
                        email,
                        password}, this.UpdateDistributorProfileOperationCompleted, userState);
        }
        
        private void OnUpdateDistributorProfileOperationCompleted(object arg) {
            if ((this.UpdateDistributorProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDistributorProfileCompleted(this, new UpdateDistributorProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetInventoryCompletedEventHandler(object sender, GetInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddProductCompletedEventHandler(object sender, AddProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateProductCompletedEventHandler(object sender, UpdateProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteProductCompletedEventHandler(object sender, DeleteProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetQuotationRequestsCompletedEventHandler(object sender, GetQuotationRequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuotationRequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuotationRequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetSentQuotationsCompletedEventHandler(object sender, GetSentQuotationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSentQuotationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSentQuotationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendQuotationResponseCompletedEventHandler(object sender, SendQuotationResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendQuotationResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendQuotationResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SendOrderCompletedEventHandler(object sender, SendOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDistributorProfileCompletedEventHandler(object sender, GetDistributorProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistributorProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistributorProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateDistributorProfileCompletedEventHandler(object sender, UpdateDistributorProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDistributorProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDistributorProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591